{% extends 'base.html.twig' %}

{% block title %}Ajouter un snippet{% endblock %}

{% block body %}
    <div class="flex flex-col justify-start items-center mt-48">
        <h1 class="text-center text-lg text-4xl mb-10">Ajouter un snippet</h1>
        <div class="w-full h-auto align-middle text-black flex flex-col justify-center items-center">
            {{form_start(form)}}
                <div class="flex flex-col justify-start items-center space-y-3">
                <div>
                    {{ form_widget(form.title, { 'attr': {'class': 'py-2 px-2'} }) }}
                </div>
                <div>
                    {{ form_widget(form.description, { 'attr': {'class': 'py-2 px-2'} }) }}
                </div>
                <div>
                    {{ form_widget(form.code, { 'attr': {'class': 'prism-live language-php py-2 px-2'} }) }}
                </div>
                <div>
                    {{ form_widget(form.language, { 'attr': {'class': 'py-2 px-2'} }) }}
                </div>
                <div>
                    {# {{ form_widget(form.tags, { 'attr': {'class': 'py-2 px-2'} }) }} #}
                </div>
                <div>
                    <ul class="tags" data-prototype="{{ form_widget(form.tags.vars.prototype)|e('html_attr') }}">
                        {% for tag in form.tags %}
                            <li>{{form_row(tag.name)}}</li>
                        {% endfor %}
                    </ul>
                </div>
                <div>
                    {{ form_widget(form.save, { 'attr': {'class': 'bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded'} }) }}
                </div>
                <div>
                <div class="my-custom-class-for-errors">
                    {{ form_errors(form) }}
                </div>
            </div>
        {{form_end(form)}}
        </div>
    </div>
    
    <script type="text/javascript">
    function addTagForm($collectionHolder, $newLinkLi) {
        // Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');

        // get the new index
        var index = $collectionHolder.data('index');

        var newForm = prototype;
        // You need this only if you didn't set 'label' => false in your tags field in TaskType
        // Replace '__name__label__' in the prototype's HTML to
        // instead be a number based on how many items we have
        // newForm = newForm.replace(/__name__label__/g, index);

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        newForm = newForm.replace(/__name__/g, index);

        // increase the index with one for the next item
        $collectionHolder.data('index', index + 1);

        // Display the form in the page in an li, before the "Add a tag" link li
        var $newFormLi = $('<li></li>').append(newForm);
        $newLinkLi.before($newFormLi);
    }
        var $collectionHolder;

        // setup an "add a tag" link
        var $addTagButton = $('<button type="button" class="add_tag_link">Add a tag</button>');
        var $newLinkLi = $('<li></li>').append($addTagButton);

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.tags');

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find('input').length);

            $addTagButton.on('click', function(e) {
                // add a new tag form (see next code block)
                addTagForm($collectionHolder, $newLinkLi);
            });
        });
    </script>
{% endblock %}